<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.platform.dao.PatientInfoMapper">
  <resultMap id="BaseResultMap" type="com.platform.model.PatientInfo">
    <id column="patient_id" jdbcType="INTEGER" property="patientId" />
    <result column="doctor_id" jdbcType="INTEGER" property="doctorId" />
    <result column="patient_name" jdbcType="VARCHAR" property="patientName" />
    <result column="sex" jdbcType="TINYINT" property="sex" />
    <result column="age" jdbcType="TINYINT" property="age" />
    <result column="symptom" jdbcType="VARCHAR" property="symptom" />
    <result column="family_medical_history" jdbcType="VARCHAR" property="familyMedicalHistory" />
    <result column="job_id" jdbcType="INTEGER" property="jobId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="resolve_time" jdbcType="TIMESTAMP" property="resolveTime" />
    <result column="is_resolve" jdbcType="TINYINT" property="isResolve" />
    <result column="is_effective" jdbcType="TINYINT" property="isEffective" />
    <result column="id_card" jdbcType="VARCHAR" property="idCard" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    patient_id, doctor_id, patient_name, sex, age, symptom, family_medical_history, job_id, 
    create_time, resolve_time, is_resolve, is_effective, id_card
  </sql>
  <select id="selectByExample" parameterType="com.platform.model.PatientInfoExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    'true' as QUERYID,
    <include refid="Base_Column_List" />
    from patient_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from patient_info
    where patient_id = #{patientId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from patient_info
    where patient_id = #{patientId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.platform.model.PatientInfoExample">
    delete from patient_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.platform.model.PatientInfo">
    insert into patient_info (patient_id, doctor_id, patient_name, 
      sex, age, symptom, 
      family_medical_history, job_id, create_time, 
      resolve_time, is_resolve, is_effective, 
      id_card)
    values (#{patientId,jdbcType=INTEGER}, #{doctorId,jdbcType=INTEGER}, #{patientName,jdbcType=VARCHAR}, 
      #{sex,jdbcType=TINYINT}, #{age,jdbcType=TINYINT}, #{symptom,jdbcType=VARCHAR}, 
      #{familyMedicalHistory,jdbcType=VARCHAR}, #{jobId,jdbcType=INTEGER}, #{createTime,jdbcType=TIMESTAMP}, 
      #{resolveTime,jdbcType=TIMESTAMP}, #{isResolve,jdbcType=TINYINT}, #{isEffective,jdbcType=TINYINT}, 
      #{idCard,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.platform.model.PatientInfo">
    insert into patient_info
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        patient_id,
      </if>
      <if test="doctorId != null">
        doctor_id,
      </if>
      <if test="patientName != null">
        patient_name,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="age != null">
        age,
      </if>
      <if test="symptom != null">
        symptom,
      </if>
      <if test="familyMedicalHistory != null">
        family_medical_history,
      </if>
      <if test="jobId != null">
        job_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="resolveTime != null">
        resolve_time,
      </if>
      <if test="isResolve != null">
        is_resolve,
      </if>
      <if test="isEffective != null">
        is_effective,
      </if>
      <if test="idCard != null">
        id_card,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="patientId != null">
        #{patientId,jdbcType=INTEGER},
      </if>
      <if test="doctorId != null">
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientName != null">
        #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        #{age,jdbcType=TINYINT},
      </if>
      <if test="symptom != null">
        #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="familyMedicalHistory != null">
        #{familyMedicalHistory,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        #{jobId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveTime != null">
        #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isResolve != null">
        #{isResolve,jdbcType=TINYINT},
      </if>
      <if test="isEffective != null">
        #{isEffective,jdbcType=TINYINT},
      </if>
      <if test="idCard != null">
        #{idCard,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.platform.model.PatientInfoExample" resultType="java.lang.Long">
    select count(*) from patient_info
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update patient_info
    <set>
      <if test="record.patientId != null">
        patient_id = #{record.patientId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null">
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.patientName != null">
        patient_name = #{record.patientName,jdbcType=VARCHAR},
      </if>
      <if test="record.sex != null">
        sex = #{record.sex,jdbcType=TINYINT},
      </if>
      <if test="record.age != null">
        age = #{record.age,jdbcType=TINYINT},
      </if>
      <if test="record.symptom != null">
        symptom = #{record.symptom,jdbcType=VARCHAR},
      </if>
      <if test="record.familyMedicalHistory != null">
        family_medical_history = #{record.familyMedicalHistory,jdbcType=VARCHAR},
      </if>
      <if test="record.jobId != null">
        job_id = #{record.jobId,jdbcType=INTEGER},
      </if>
      <if test="record.createTime != null">
        create_time = #{record.createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.resolveTime != null">
        resolve_time = #{record.resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="record.isResolve != null">
        is_resolve = #{record.isResolve,jdbcType=TINYINT},
      </if>
      <if test="record.isEffective != null">
        is_effective = #{record.isEffective,jdbcType=TINYINT},
      </if>
      <if test="record.idCard != null">
        id_card = #{record.idCard,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update patient_info
    set patient_id = #{record.patientId,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      patient_name = #{record.patientName,jdbcType=VARCHAR},
      sex = #{record.sex,jdbcType=TINYINT},
      age = #{record.age,jdbcType=TINYINT},
      symptom = #{record.symptom,jdbcType=VARCHAR},
      family_medical_history = #{record.familyMedicalHistory,jdbcType=VARCHAR},
      job_id = #{record.jobId,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      resolve_time = #{record.resolveTime,jdbcType=TIMESTAMP},
      is_resolve = #{record.isResolve,jdbcType=TINYINT},
      is_effective = #{record.isEffective,jdbcType=TINYINT},
      id_card = #{record.idCard,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.platform.model.PatientInfo">
    update patient_info
    <set>
      <if test="doctorId != null">
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="patientName != null">
        patient_name = #{patientName,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=TINYINT},
      </if>
      <if test="age != null">
        age = #{age,jdbcType=TINYINT},
      </if>
      <if test="symptom != null">
        symptom = #{symptom,jdbcType=VARCHAR},
      </if>
      <if test="familyMedicalHistory != null">
        family_medical_history = #{familyMedicalHistory,jdbcType=VARCHAR},
      </if>
      <if test="jobId != null">
        job_id = #{jobId,jdbcType=INTEGER},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="resolveTime != null">
        resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      </if>
      <if test="isResolve != null">
        is_resolve = #{isResolve,jdbcType=TINYINT},
      </if>
      <if test="isEffective != null">
        is_effective = #{isEffective,jdbcType=TINYINT},
      </if>
      <if test="idCard != null">
        id_card = #{idCard,jdbcType=VARCHAR},
      </if>
    </set>
    where patient_id = #{patientId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.platform.model.PatientInfo">
    update patient_info
    set doctor_id = #{doctorId,jdbcType=INTEGER},
      patient_name = #{patientName,jdbcType=VARCHAR},
      sex = #{sex,jdbcType=TINYINT},
      age = #{age,jdbcType=TINYINT},
      symptom = #{symptom,jdbcType=VARCHAR},
      family_medical_history = #{familyMedicalHistory,jdbcType=VARCHAR},
      job_id = #{jobId,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      resolve_time = #{resolveTime,jdbcType=TIMESTAMP},
      is_resolve = #{isResolve,jdbcType=TINYINT},
      is_effective = #{isEffective,jdbcType=TINYINT},
      id_card = #{idCard,jdbcType=VARCHAR}
    where patient_id = #{patientId,jdbcType=INTEGER}
  </update>
</mapper>